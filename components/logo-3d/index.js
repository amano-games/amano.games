import * as THREE from 'three';
import { useFrame } from '@react-three/fiber';
/* eslint filenames/match-exported: 0 */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useRef, useEffect } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';

const pupilPosition = {
  x: 0.02457561157643795,
  y: 1.2606574296951294,
  z: 0.14621944725513458,
};

export default function Logo3D(props) {
  const group = useRef();
  const pupil = useRef();
  const { nodes, animations, materials } = useGLTF('/logo-alt.gltf');
  const { actions, mixer } = useAnimations(animations, group);

  useEffect(() => {
    mixer.addEventListener('finished', () => {
      actions.idle.play();
    });
    actions.Opening.setLoop(THREE.LoopOnce);
    actions.Text.setLoop(THREE.LoopOnce);
    actions.Opening.play();
  });

  const onHover = () => {
    actions.Text.reset();
    actions.Text.play();
  };

  useFrame((state) => {
    // const ogPosition = pupilPosition.current;
    const { x: mx, y: my } = state.mouse;
    const { x, y } = pupilPosition;

    pupil.current.position.x = x + mx * 0.2;
    pupil.current.position.y = y + my * 0.2;
  });

  return (
    <group ref={group} {...props} dispose={null} onPointerOver={onHover}>
      <group>
        <primitive object={nodes.Hand_Bone} />
        <primitive object={nodes.eye_control} />
        <primitive object={nodes.Pupil_Control} ref={pupil} />
        <primitive object={nodes.a1} />
        <primitive object={nodes.m} />
        <primitive object={nodes.a2} />
        <primitive object={nodes.n} />
        <primitive object={nodes.o} />
        <primitive object={nodes.single} />
        <primitive object={nodes.text_deform_control} />
      </group>
      <skinnedMesh
        geometry={nodes.eye.geometry}
        material={materials.White}
        skeleton={nodes.eye.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Hand.geometry}
        material={nodes.Hand.material}
        skeleton={nodes.Hand.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Pupil.geometry}
        material={nodes.Pupil.material}
        skeleton={nodes.Pupil.skeleton}
      />
      <skinnedMesh
        name="Text"
        geometry={nodes.Text.geometry}
        material={nodes.Text.material}
        skeleton={nodes.Text.skeleton}
        morphTargetDictionary={nodes.Text.morphTargetDictionary}
        morphTargetInfluences={nodes.Text.morphTargetInfluences}
      />
    </group>
  );
}

useGLTF.preload('/logo-alt.gltf');
